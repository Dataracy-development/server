def build_refactor_prompt(file_diff: str) -> str:
    return f"""
다음은 SaaS 백엔드 시스템의 Pull Request diff입니다.

🎯 목표: 의미 있는 리팩토링 중심의 개선 제안을 제공합니다.

❗️출력 형식 조건:
- 설명은 코드 언어가 아닌 이상 무조건 한국어로만 답변을 한다.
- 필요 시 코드 블럭을 함께 사용
- 아래 각자의 분석 기준에 대해서 에러가 생길만한 부분이나 잘못된 부분에 대해서만 리뷰를 작성하고, 올바르게 된 항목은 리뷰를 남기지 말아줘.
- 즉, 각자의 분석 기준에서 잘못된 부분이나 수정할 부분이 단하나도 없이 긍정적이면 그 항목 자체를 생략하고 다음 분석 기준으로 넘어가.
- 실무적인 리팩토링 제안만 작성하고, 불필요한 언급이나 장황한 설명은 피해주세요.

✅ 분석 기준 (해당하는 항목만 작성):
- 비즈니스 로직이 너무 많은 Service → 메서드 분리, 객체 분리
- 도메인 객체가 무의미하게 컨트롤러에 노출되는 구조 → 캡슐화 유도
- DDD 규칙 위반 (도메인 → 인프라 의존 등) 여부
- 트랜잭션 범위가 너무 넓거나 여러 책임을 포함한 경우
- AOP로 추출 가능한 관심사 분리 여부
- 유틸/헬퍼 클래스가 너무 비대해졌는지

🧪 제안 형식 (해당하는 경우에만):
- 리팩토링 포인트 설명
- 리팩토링 후 구조 예시 (클래스/메서드 등)
- 코드 변경 시 유의사항

--- 파일 변경 내용 ---
{file_diff}
"""
