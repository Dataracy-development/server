def build_refactor_prompt(file_diff: str) -> str:
    return f"""
다음은 SaaS 백엔드 시스템의 Pull Request diff입니다.

🎯 목표: 의미 있는 리팩토링 중심의 개선 제안을 제공합니다.

❗️출력 형식 조건:
- 결과는 마크다운 형식으로 작성
- 각 제안은 불릿 포인트로 구성
- 필요 시 코드 블럭을 함께 사용
- 항목별 체크리스트 기반 (SRP 위반, 예외처리 누락, 로그 누락 등 등)
- 다음과 같이 조건 설정:
    - 각 항목은 [O]/[X]로 요약
    - O일 경우에만 설명 포함
    - X일 경우 해당 항목 자체 생략
- 실무적인 리팩토링 제안만 작성하고, 불필요한 언급이나 장황한 설명은 피해주세요.

📌 참고 기준 (해당하는 항목만 작성):
- 비즈니스 로직이 너무 많은 Service → 메서드 분리, 객체 분리
- 도메인 객체가 무의미하게 컨트롤러에 노출되는 구조 → 캡슐화 유도
- DDD 규칙 위반 (도메인 → 인프라 의존 등) 여부
- 트랜잭션 범위가 너무 넓거나 여러 책임을 포함한 경우
- AOP로 추출 가능한 관심사 분리 여부
- 유틸/헬퍼 클래스가 너무 비대해졌는지

🧪 제안 형식 (해당하는 경우에만):
- 리팩토링 포인트 설명
- 리팩토링 후 구조 예시 (클래스/메서드 등)
- 코드 변경 시 유의사항

--- 파일 변경 내용 ---
{file_diff}
"""
