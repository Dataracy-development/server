services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    # 운영 환경에서는 포트 노출 제거 (내부 네트워크만 사용)
    volumes:
      - ../prometheus/prometheus-prod.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-prod-data:/prometheus
    networks:
      - dataracy-network-prod
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-lifecycle"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-prod
    # 운영 환경에서는 포트 노출 제거 (NGINX를 통해서만 접근)
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=https://api.dataracy.store/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
    volumes:
      - grafana-prod-data:/var/lib/grafana
    networks:
      - dataracy-network-prod
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"

networks:
  dataracy-network-prod:
    external: true

volumes:
  prometheus-prod-data:
    driver: local
  grafana-prod-data:
    driver: local
