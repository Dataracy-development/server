plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

tasks.withType(JavaCompile) {
	options.compilerArgs += ['-parameters']
}

configurations.all {
	exclude group: 'commons-logging', module: 'commons-logging'
}

jar {
	enabled = true
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	from { sourceSets.main.resources.srcDirs }
}



repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// MySQL
	implementation 'com.mysql:mysql-connector-j'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// OAuth 2.0
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// SES & MAIL
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.amazonaws:aws-java-sdk-ses:1.12.3'

	// Redis & Redisson & Kafka
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.redisson:redisson:3.27.0'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.commons:commons-pool2'

	// AWS S3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.643'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// JWT → 최신 버전 사용
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
