#!/bin/bash

set -euo pipefail

echo "========================================"
echo "[DEV DEPLOY] Blue/Green Î¨¥Ï§ëÎã® Î∞∞Ìè¨ ÏãúÏûë"
echo "========================================"

DEPLOY_STATE_DIR="/home/ubuntu/color-config"
CURRENT_COLOR_FILE="$DEPLOY_STATE_DIR/current_color_dev"

mkdir -p "$DEPLOY_STATE_DIR"

# ÏµúÏ¥à Ïã§Ìñâ Ïãú Î¨¥Ï°∞Í±¥ blueÎ°ú Í≥†Ï†ï
if [ ! -f "$CURRENT_COLOR_FILE" ]; then
  echo "blue" > "$CURRENT_COLOR_FILE"
fi

CURRENT=$(cat "$CURRENT_COLOR_FILE")
NEXT=$([[ "$CURRENT" == "blue" ]] && echo "green" || echo "blue")

# üí° ÏµúÏ¥à Ïã§Ìñâ Ïãú green Ïª®ÌÖåÏù¥ÎÑàÎäî ÎùÑÏö∞ÏßÄ ÏïäÍ≥† blueÎßå Ïã§Ìñâ
if [ "$CURRENT" == "blue" ] && ! docker ps --format '{{.Names}}' | grep -q 'backend-blue-dev'; then
  echo "[INFO] ÏµúÏ¥à Ïã§Ìñâ: backend-blue-dev Ïª®ÌÖåÏù¥ÎÑàÎßå Ïã§Ìñâ"
  docker pull juuuunny/backend:latest
  docker-compose -f ../docker/docker-compose-blue-dev.yml up -d --force-recreate --pull always

  echo "[INFO] nginx-proxy-dev Ïã§Ìñâ"
  docker-compose -f ../docker/docker-compose-nginx-dev.yml up -d nginx-proxy-dev

  echo "[INFO] Ï¥àÍ∏∞ Î∞∞Ìè¨ ÏôÑÎ£å (blue)"
  exit 0
fi

# Ïù¥ÌõÑÎ∂ÄÌÑ∞Îäî Í∏∞Ï°¥ switch Î°úÏßÅ ÏàòÌñâ
BACKEND_NAME="backend-${NEXT}-dev"
NEXT_COMPOSE="../docker/docker-compose-${NEXT}-dev.yml"

echo "[INFO] ÌòÑÏû¨ Î∞∞Ìè¨ Ï§ëÏù∏ Ïª®ÌÖåÏù¥ÎÑà: $CURRENT"
echo "[INFO] ÏÉàÎ°ú Î∞∞Ìè¨Ìï† ÏÉâÏÉÅ: $NEXT"

docker pull juuuunny/backend:latest
docker rm -f "$BACKEND_NAME" || true
docker-compose -f "$NEXT_COMPOSE" up -d --force-recreate --pull always

echo "[INFO] Health Check ÏãúÏûë: $BACKEND_NAME ..."
for i in {1..20}; do
  STATUS=$(docker inspect --format='{{json .State.Health.Status}}' "$BACKEND_NAME" 2>/dev/null || echo "null")
  if [ "$STATUS" == "\"healthy\"" ]; then
    echo "[SUCCESS] $BACKEND_NAME Ïª®ÌÖåÏù¥ÎÑàÍ∞Ä Ï†ïÏÉÅÏûÖÎãàÎã§."
    break
  else
    echo "  [$i/20] ÎåÄÍ∏∞ Ï§ë... (ÏÉÅÌÉú: $STATUS)"
    sleep 5
  fi
done

if [ "$STATUS" != "\"healthy\"" ]; then
  echo "[ERROR] $BACKEND_NAME Ïã§Ìñâ Ïã§Ìå® ‚Üí Î°§Î∞± ÏãúÏûë"
  docker rm -f "$BACKEND_NAME" || true
  echo "[INFO] Î°§Î∞± ÏôÑÎ£å: Í∏∞Ï°¥ Ïª®ÌÖåÏù¥ÎÑà Ïú†ÏßÄ ($CURRENT)"
  exit 1
fi

# NGINX ÏÑ§Ï†ï Î≥ÄÍ≤Ω
NGINX_CONF_PATH="../nginx/upstream-blue-green-dev.conf"
cat > "$NGINX_CONF_PATH" <<EOF
upstream backend-dev {
  server $BACKEND_NAME:8080;
}

server {
  listen 80;
  server_name dataracy.store;

  location / {
    proxy_pass http://backend-dev;
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto \$scheme;
  }

  location /actuator/health {
    proxy_pass http://backend-dev/actuator/health;
  }
}
EOF

docker restart nginx-proxy-dev || {
  echo "[ERROR] nginx-proxy-dev Ïû¨ÏãúÏûë Ïã§Ìå®"
  exit 1
}

OLD_BACKEND="backend-${CURRENT}-dev"
docker stop "$OLD_BACKEND" || true
docker rm -f "$OLD_BACKEND" || echo "[WARN] Ï†úÍ±∞ Ïã§Ìå® ÎòêÎäî Ïù¥ÎØ∏ ÏóÜÏùå"

echo "$NEXT" > "$CURRENT_COLOR_FILE"

echo "========================================"
echo "[DONE] Î¨¥Ï§ëÎã® Î∞∞Ìè¨ ÏôÑÎ£å: [$NEXT]"
echo "========================================"
