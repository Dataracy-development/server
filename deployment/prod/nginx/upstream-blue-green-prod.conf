# api.dataracy.co.kr : HTTPS 강제 + HSTS
# 운영 컨테이너가 없으면 dev로 내부 폴백(@fallback_dev)

# 80 -> 443 리다이렉트 (Cloudflare Redirect Rule과 중복되어도 안전)
server {
  listen 80;
  listen [::]:80;
  server_name api.dataracy.co.kr;
  return 301 https://$host$request_uri;
}

server {
  # (경고 해결) 새 문법: http2 on;
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name api.dataracy.co.kr;

  # Cloudflare Origin Cert
  ssl_certificate     /etc/nginx/ssl/cloudflare/origin.crt;
  ssl_certificate_key /etc/nginx/ssl/cloudflare/origin.key;
  ssl_protocols TLSv1.2 TLSv1.3; ssl_prefer_server_ciphers on;

  # HSTS (서브도메인 미포함)
  add_header Strict-Transport-Security "max-age=31536000" always;

  client_max_body_size 50m;
  client_body_timeout 120s;

  # Docker 내장 DNS (런타임 해석)
  resolver 127.0.0.11 valid=30s ipv6=off;

  # 현재 Blue/Green 타겟과 dev 폴백 대상을 변수로 설정
  # ↓ 실제 컨테이너 이름/포트에 맞춰 한 줄만 수정하세요.
  set $prod_upstream http://backend-prod-blue:8080;  # 운영
  set $dev_upstream  http://backend-blue:8080;       # 개발(예: backend-dev-blue:8080)

  # 공통 프록시 헤더
  proxy_set_header Host               $host;
  proxy_set_header X-Real-IP          $remote_addr;
  proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto  $scheme;
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "";

  # 1) 기본 라우팅: prod로 보냄
  # 2) prod에서 502/504/500 등 나오면 dev로 내부 폴백
  #    (DNS 미해결/컨테이너 다운 등도 502로 매핑되어 폴백 진입)
  location / {
    proxy_intercept_errors on;
    proxy_request_buffering off;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    proxy_pass $prod_upstream;
    # 상태코드 목록 → 내부 location 이름
    error_page 500 502 503 504 @fallback_dev;

  }

  # 헬스체크도 동일 정책 적용
  location = /actuator/health {
    proxy_intercept_errors on;
    proxy_pass $prod_upstream$request_uri;

    error_page 500 502 503 504 @fallback_dev;
  }

  # 내부 폴백(외부 30x 리다이렉트 아님, 같은 URL로 dev에 프록시)
  location @fallback_dev {
    proxy_pass $dev_upstream;
  }
}
