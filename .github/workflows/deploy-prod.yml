name: Build and Deploy to EC2 (PROD - Blue/Green)

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: juuuunny/backend

jobs:
  build-and-deploy-prod:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout Source
        uses: actions/checkout@v3

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: üîê Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: üõ†Ô∏è Build with Gradle (Skip Tests)
        run: ./gradlew clean build -x test

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: üîë Save PEM key
        run: |
          echo "${{ secrets.EC2_PROD_SSH_KEY }}" > ec2key.pem
          chmod 600 ec2key.pem

      - name: üè∑Ô∏è Set Docker Tag (blue or green)
        run: |
          COLOR=$(ssh -o StrictHostKeyChecking=no -i ec2key.pem ubuntu@${{ secrets.EC2_PROD_HOST }} "cat /home/ubuntu/color-config/current_color_prod || echo blue")
          if [ "$COLOR" = "blue" ]; then
            echo "TAG_NAME=prod-green" >> $GITHUB_ENV
            echo "DEPLOY_COLOR=green" >> $GITHUB_ENV
            echo "PREVIOUS_COLOR=blue" >> $GITHUB_ENV
          else
            echo "TAG_NAME=prod-blue" >> $GITHUB_ENV
            echo "DEPLOY_COLOR=blue" >> $GITHUB_ENV
            echo "PREVIOUS_COLOR=green" >> $GITHUB_ENV
          fi

      - name: üê≥ Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME:$TAG_NAME -f Dockerfile .
          docker push $IMAGE_NAME:$TAG_NAME

      - name: üöÄ Deploy to EC2 (PROD)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PROD_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PROD_SSH_KEY }}
          script: |
            cd ~/dataracy-prod
            git reset --hard
            git clean -fd
            git fetch origin main
            git reset --hard origin/main
            chmod +x deployment/prod/script/deploy-prod.sh
            ./deployment/prod/script/deploy-prod.sh
