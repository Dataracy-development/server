name: Build and Push Docker Image

on:
  pull_request:
    branches: [ develop, main ]

env:
  IMAGE_NAME: juuuunny/backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Save PEM keys
        run: |
          echo "${{ secrets.EC2_DEV_SSH_KEY }}" > ec2-dev.pem
          chmod 600 ec2-dev.pem
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-prod.pem
          chmod 600 ec2-prod.pem

      - name: Determine TAG_NAME by branch and server color
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]]; then
            COLOR=$(ssh -o StrictHostKeyChecking=no -i ec2-prod.pem "ubuntu@${{ secrets.EC2_HOST }}" "cat ~/dataracy/deployment/prod/blue-green/current_color || echo blue")
            if [ "$COLOR" = "blue" ]; then
              echo "TAG_NAME=prod-green" >> $GITHUB_ENV
            else
              echo "TAG_NAME=prod-blue" >> $GITHUB_ENV
            fi
          elif [[ "${{ github.base_ref }}" == "develop" ]]; then
            COLOR=$(ssh -o StrictHostKeyChecking=no -i ec2-dev.pem ubuntu@${{ secrets.EC2_DEV_HOST }} "cat ~/dataracy/deployment/dev/blue-green/current_color || echo blue")
            if [ "$COLOR" = "blue" ]; then
              echo "TAG_NAME=develop-green" >> $GITHUB_ENV
            else
              echo "TAG_NAME=develop-blue" >> $GITHUB_ENV
            fi
          fi

      - name: Build and Push Docker Image
        run: |
          echo "Building Docker image with tag: $TAG_NAME"
          docker build -t "${IMAGE_NAME}:${TAG_NAME}" -f Dockerfile .
          docker push "${IMAGE_NAME}:${TAG_NAME}"
