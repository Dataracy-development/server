name: Build and Push Docker Image

on:
  pull_request:
    branches: [ develop ]

env:
  IMAGE_NAME: juuuunny/backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Setup SSH Agent
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.EC2_DEV_SSH_KEY }}" | ssh-add -

      - name: Determine DEPLOY_COLOR and Run Remote Deploy Script
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_DEV_SSH_KEY }}
          script: |
            cd ~/dataracy
            git reset --hard
            git clean -fd
            git fetch origin develop
            git reset --hard origin/develop

            # 블루/그린 전환 정보 설정
            if [ -f deployment/dev/blue-green/current_color ]; then
              PREVIOUS_COLOR=$(cat deployment/dev/blue-green/current_color)
            else
              PREVIOUS_COLOR=green
            fi

            if [ "$PREVIOUS_COLOR" = "blue" ]; then
              DEPLOY_COLOR=green
            else
              DEPLOY_COLOR=blue
            fi

            echo "Previous color: $PREVIOUS_COLOR"
            echo "Deploy color: $DEPLOY_COLOR"

            chmod +x deployment/dev/script/deploy.sh
            IMAGE_NAME=${{ env.IMAGE_NAME }} \
            DEPLOY_COLOR=$DEPLOY_COLOR \
            PREVIOUS_COLOR=$PREVIOUS_COLOR \
            ./deployment/dev/script/deploy.sh
